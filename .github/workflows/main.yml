name: Build, Analyze, and Deploy Next.js

on:
  push:
    tags:
      - 'v*'  # Releases: v1.08.24

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: |
        echo "Logging in to Docker Hub..."
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build the Docker image
      run: docker build . -t nextserver:${{ github.ref_name }}

    - name: List Docker images
      run: docker image ls

    - name: Tag Docker image
      run: docker tag nextserver:${{ github.ref_name }} devopsport2165/nextserver:${{ github.ref_name }}

    - name: Push the Docker image to Docker Hub
      run: docker push devopsport2165/nextserver:${{ github.ref_name }}

  sonarQubeAnalysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: SonarQube Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=devopsport
          -Dsonar.projectKey=devopsport_devopsport
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: sonarQubeAnalysis

    steps:
    - name: Write SSH private key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        cp private_key.pem ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_ADDRESS }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_ADDRESS }} << 'EOF'
          # Update and install Docker
          sudo yum update -y
          sudo yum install -y docker
          sudo systemctl start docker

          # Pull Docker image
          sudo docker pull devopsport2165/nextserver:${{ github.ref_name }}

          # Stop and remove existing container
          sudo docker stop nextserver || true
          sudo docker rm nextserver || true

          # Run new container
          sudo docker run -d --name nextserver -p 3000:3000 devopsport2165/nextserver:${{ github.ref_name }}
        EOF

  notify-infra-repo:
    runs-on: ubuntu-latest
    needs: deploy-to-ec2

    steps:
    - name: Checkout Infrastructure Repo
      uses: actions/checkout@v3
      with:
        repository: Vishalport/terraform-infrastructure-iac
        token: ${{ secrets.GIT_TOKEN }}

    - name: Trigger IaC Workflow
      run: |
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d '{"event_type": "deploy_to_eks", "client_payload": {"repo": "nextjs-server"}}' \
        https://api.github.com/repos/Vishalport/terraform-infrastructure-iac/dispatches